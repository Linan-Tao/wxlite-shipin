<template>
  <view class="page">
    <view class="section-wrapper">
      <!-- <image mode="{{image.mode}}" src="{{image.src}}"></image> -->
      <!--
      <text class="title">FASHION WITH REACH</text>
      -->
      <swiper indicator-dots="{{true}}">
        <block wx:for="{{images}}" wx:key="index">
          <swiper-item>
            <image src="{{item}}" class="slide-image" mode="scaleToFill" height="350"/>
          </swiper-item>
        </block>
      </swiper>
    </view>
    <!--
    <view class="text d-flex f-wrap-no a-items-center m-t-25">
      <view class="t-color-black text-block1 m-l-10 f-grow-1 a-self-stretch d-flex f-direction-column justify-content-center a-items-center">
        <text>全部新品</text>
      </view>
      <view class="t-color-black text-block2 m-l-10 f-grow-1 a-self-stretch d-flex f-direction-column justify-content-center a-items-center">
        <text>新品活动</text>
      </view>
    </view>
    -->

    <view class="catalogs-wrapper">
      <view wx:for-items="{{catalogs}}"
            wx:for-item="catalog"
            wx:key="id"
            wx:for-index="index"
            class="catalog-item">
        {{catalog.name}}
      </view>
    </view>

    <view class="products-wrapper">
      <view class="product" wx:for-items="{{products}}" wx:for-item="product" wx:for-index="index" wx:key="id">
        <navigator url="{{'product?id='+product.id}}" open-type="navigateTo" hover-class="navigator-hover">
          <view class="info-wrapper">
            <view class="image">
              <image mode="scaleToFill" src="{{product.first_image}}"></image>
            </view>
            <view class="info m-l-20">
              <text class="name">{{product.name}}</text>
              <text class="desc">{{product.description}}</text>
              <text class="price align-content-end">￥{{product.price}}</text>
            </view>
          </view>
        </navigator>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { login } from '../libs/login'
  import ProductAPI from '../api/products'
  // import CatalogAPI from '../api/catalog'
  import SettingApi from '../api/settings'
  export default class Index extends wepy.page {
    data = {
      userUrl: '',
      userName: '',
      systemHeight: '',
      bannerWidth: '',
      bannerHeight: '',
      contentNoneHeight: '',
      images: [],
      productsMeta: null,
      products: [],
      catalogs: []
    }

    methods = {
      bindChange: function(e) {
        // const val = e.detail.value
      }
    }
    onLoad () {
      // CatalogAPI.common().then((res) => {
      //   this.catalogs = res.data
      // })

      SettingApi.all().then((res) => {
        console.log(res)
        this.catalogs = res.data.catalogs
        this.images = res.data.banners
        this.$parent.globalData.delivery_fee = res.data.delivery_fee
        this.$parent.globalData.my_banner = res.data.my_banner
      })
      this.refreshData()
      login()
      wepy.getSystemInfo({
        success: (res) => {
          console.log('获取系统参数成功')
          this.bannerWidth = res.windowWidth
          this.bannerHeight = res.windowWidth * 5 / 9
          this.contentNoneHeight = res.windowHeight - res.windowWidth * 5 / 9 - 60
          this.systemHeight = res.windowHeight
          this.$broadcast('window-width', res.windowWidth)
        },
        fail: (res) => {
          console.log('获取系统参数失败')
        }
      })

      setTimeout(() => {
        this.loading = false
        this.$apply()
      }, 3000)

      // setTimeout(() => {
      //   login().then(this.refreshData.bind(this))
      // }, 2000)

      if (this.$parent.globalData.userInfo) {
        this.userName = this.$parent.globalData.userInfo.nickName
        this.userUrl = this.$parent.globalData.userInfo.avatarUrl
        this.$apply()
      } else if (this.data.canIUse) {
        wepy.userInfoReadyCallback = (res) => {
          this.userName = res.userInfo.nickName
          this.userUrl = res.userInfo.avatarUrl
          this.$apply()
        }
      } else {
        wepy.getUserInfo({
          success: (res) => {
            this.$parent.globalData.userInfo = res.userInfo
            this.userName = res.userInfo.nickName
            this.userUrl = res.userInfo.avatarUrl
            this.$apply()
          }
        })
      }
    }
    refreshData () {
      let self = this
      wepy.showLoading({
        title: '加载中...'
      })
      ProductAPI.all().then((resp) => {
        console.log(resp)
        self.productsMeta = resp.data.meta
        self.products = resp.data.data
        self.loading = false
        self.$apply()
        wepy.hideLoading()
      })
    }
  }
</script>

<style lang="less">
  .page {
    padding: 0rpx 10rpx;
    .section-wrapper {
      text-align: center;
    }

    .catalogs-wrapper {
      margin-bottom: 10rpx;
      text-align: center;
      vertical-align: middle;
      border-radius: 5rpx;
      background: #fff;
      box-shadow: 5rpx 5rpx 3rpx #aaa;
      .catalog-item {
        display: inline-block;
        text-align: center;
        width: 33%;
        margin: 20rpx 0rpx;
        &:not(:first-child) {
          border-left: 1rpx solid #D2D3D2;
        }
      }
    }
    .products-wrapper {
      .product {
        background: rgba(255, 255, 255, 0.85);
        border-radius: 5rpx;
        box-shadow: 5rpx 5rpx 3rpx #aaa;
        &:not(:first-child) {
          margin-top: 15rpx;
        }
        .info-wrapper {
          display: flex;
          .image {
            width: 200rpx;
            height: 200rpx;
            background-color: gainsboro;
            image {
              border-top-left-radius: 5rpx;
              border-bottom-left-radius: 5rpx;
              width: 100%;
              height: 100%;
            }
          }
          .info {
            flex: 1;
            display: flex;
            flex-direction: column;
            .name {
              align-self: flex-start;
              color: #D4579C;
              font-size: 40rpx;
              font-weight: 600;
              width: 200rpx;
              height: 58rpx;
              overflow: hidden;
            }
            .desc {
              font-size: 0.7em;
              display: block;
              flex: auto;
              align-self: auto;
              max-height: 80rpx;
              overflow: hidden;
            }
            .price {
              align-self: flex-end;
              color: #CC0000;
              margin-right: 20rpx;
            }
          }
        }
      }
    }
  }

</style>
